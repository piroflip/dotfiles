#!/usr/bin/env bash

source "$HOME/.config/bspwm/common"

cleanup() {
	jobs=( $(jobs -p) )

	if [[ "$jobs" ]]; then
		kill "${jobs[@]}"
	fi

	bspc config top_padding 0
}

get_line() {
	declare counter=0 line=$1

	while read; do
		if (( counter == line )); then
			printf '%s\n' "$REPLY"
			return 0
		fi

		(( counter++ ))
	done
}

parse_fifo_data() {
	declare msg desktop_spec
	declare -g win_name misc bspwm_status

	while read; do
		case "$REPLY" in
			cmd::*)
				read -r cmd args <<< "${REPLY#cmd::}"

				case "$cmd" in
					redraw)
						printf 'Redraw triggered\n'
						sleep 1
						printf '%s\n' "$msg"
					;;
					respawn)
						printf 'Dying...\n'
						sleep 1
						rexec
					;;
					run)
						$args
						rexec
					;;
				esac
			;;
			volume::*) volume="${REPLY#*volume::}";;
			updates::*) updates="${REPLY#*updates::}";;
			date::*) date="${REPLY#*date::}";;
			T*) win_name="${REPLY#*T}";;
			WM*)
				unset desktop_spec
				IFS=':' read -a bspwm_status <<< "$REPLY"

				for i in "${bspwm_status[@]}"; do
					if [[ "$i" =~ ^[oOfFuU].+ ]]; then
						n="${i#*[oOfFuU]}"

						case "$i" in
							O*|F*|U*) desktop_spec+="%{B#${panel_bg_focused}} $n %{B-}";;
							u*) desktop_spec+="%{B#${colour_urgent}} $n %{B-}";;
							o*) desktop_spec+="%{B-}%{A:bspc desktop -f $n:} $n %{A}";;
							f*)
								(( panel_show_empty_tags )) && {
									desktop_spec+="%{B-} $n "
								}
							;;
						esac
					fi
				done

				read _ _ _ _ layout float _ < <( bspc query -T -d focused | get_line 1 )

				if [[ "$float" == 'f' ]]; then
					float_flag='f'
				else
					float_flag=''
				fi

				case "$layout" in
					T) layout_flag='t';;
					M) layout_flag='m';;
				esac

				desktop_spec+=" %{A:bsptl:}[${layout_flag}${float_flag}]%{A}"
			;;
		esac

		msg="$desktop_spec"

		[[ "${win_name}" ]] && { msg+=" %{B#${panel_bg_focused}}%{F#${panel_bg_normal}}%{F-} ${win_name} %{B-}%{F#${panel_bg_focused}}%{F-}"; }

		msg+="%{r}%{F#${colour_bg_focused}}%{F-}%{B#${panel_bg_focused}} $volume $date "
		msg+='%{B-}%{F-}'

		printf '%s\n' "$msg"
	done < "$panel_fifo"
}

misc_status() {
	declare ip msg date

	while sleep 1; do
		date=$( date +%A,\ %Y.%m.%d\ %H:%M:%S )
		msg="[ $date ]"
		printf 'S:%s\n' "$msg"
	done
}

rexec() {
	kill $(jobs -p)
	exec "$0"
}

main() {
	trap 'cleanup' EXIT TERM INT
	trap 'rexec' HUP

	[[ -e "$panel_fifo" ]] && {
		rm "$panel_fifo" || { return 1; }
	}

	mkfifo "$panel_fifo"


	bspc control --subscribe > "$panel_fifo" &
	xtitle -sf 'T%s' > "$panel_fifo" &
	$HOME/.config/bspwm/panel_status &

	bspc config top_padding "$(( panel_h + bspwm_window_gap ))"

	parse_fifo_data | lemonbar -g "${panel_w}x${panel_h}+${bspwm_window_gap}+${bspwm_window_gap}" \
                         -f "$fontspec" \
                         -F "#${panel_fg_normal}" \
                         -B "#${panel_bg_normal}" | sh &
	wait
}

main
